{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCIA,I,EAAM,EAAM,AADK,AADH,SAAS,aAAa,CAAC,SACd,aAAa,CAAC,MAChB,gBAAgB,CAAC,MAEhC,EAAU,CAAG,CAAC,EAAE,CAChB,EAAc,CAAG,CAAC,EAAE,CACpB,EAAS,CAAG,CAAC,EAAE,CACf,EAAY,CAAG,CAAC,EAAE,CAElB,EAAQ,SAAS,aAAa,CAAC,SAC/B,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAW,EAAM,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAExC,SAAS,EAAgB,CAAG,EAM1B,OAAO,WALU,EACd,KAAK,CAAC,IACN,MAAM,CAAC,SAAC,CAFX,EAEkB,OAAC,GAAM,KAAO,GAAM,KAAQ,AAAO,MAAP,CAC3C,GAAA,IAAI,CAAC,IAGV,CAEA,SAAS,EAAS,CAAO,EACP,SAAZ,IACF,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAS,EAAK,aAAa,CAAE,mBAAkB,WAAW,CAC1D,EAAS,EAAK,aAAa,CAAE,mBAAkB,WAAW,CAEhE,OAAO,EAAO,aAAa,CAAC,EAC9B,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,IAG1B,aAAZ,IACF,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAS,EAAK,aAAa,CAAE,mBAAkB,WAAW,CAC1D,EAAS,EAAK,aAAa,CAAE,mBAAkB,WAAW,CAEhE,OAAO,EAAO,aAAa,CAAC,EAC9B,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,IAG1B,QAAZ,IACF,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAS,EAAK,aAAa,CAAE,mBAAkB,WAAW,CAC1D,EAAS,EAAK,aAAa,CAAE,mBAAkB,WAAW,CAEhE,OAAO,EAAgB,GAAU,EAAgB,EACnD,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,IAG1B,WAAZ,IACF,EAAK,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAS,EAAK,aAAa,CAAE,mBAAkB,WAAW,CAC1D,EAAS,EAAK,aAAa,CAAE,mBAAkB,WAAW,CAEhE,OAAO,EAAgB,GAAU,EAAgB,EACnD,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,GAE5C,CAEA,EAAQ,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAS,O,GACjD,EAAY,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAS,W,GACrD,EAAO,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAS,M,GAChD,EAAU,gBAAgB,CAAC,QAAS,WAAM,OAAA,EAAS,S","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar thead = document.querySelector(\"thead\");\nvar theadRow = thead.querySelector(\"tr\");\nvar nav = theadRow.querySelectorAll(\"th\");\nvar navName = nav[0];\nvar navPosition = nav[1];\nvar navAge = nav[2];\nvar navSalary = nav[3];\nvar tbody = document.querySelector(\"tbody\");\nvar rows = _to_consumable_array(tbody.querySelectorAll(\"tr\"));\nfunction convertToNumber(str) {\n    var cleanStr = str.split(\"\").filter(function(ch) {\n        return ch >= \"0\" && ch <= \"9\" || ch === \".\";\n    }).join(\"\");\n    return parseFloat(cleanStr);\n}\nfunction sortList(element) {\n    if (element === \"name\") {\n        rows.sort(function(rowA, rowB) {\n            var value1 = rowA.querySelector(\"td:nth-child(1)\").textContent;\n            var value2 = rowB.querySelector(\"td:nth-child(1)\").textContent;\n            return value1.localeCompare(value2);\n        });\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    }\n    if (element === \"position\") {\n        rows.sort(function(rowA, rowB) {\n            var value1 = rowA.querySelector(\"td:nth-child(2)\").textContent;\n            var value2 = rowB.querySelector(\"td:nth-child(2)\").textContent;\n            return value1.localeCompare(value2);\n        });\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    }\n    if (element === \"age\") {\n        rows.sort(function(rowA, rowB) {\n            var value1 = rowA.querySelector(\"td:nth-child(3)\").textContent;\n            var value2 = rowB.querySelector(\"td:nth-child(3)\").textContent;\n            return convertToNumber(value1) - convertToNumber(value2);\n        });\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    }\n    if (element === \"salary\") {\n        rows.sort(function(rowA, rowB) {\n            var value1 = rowA.querySelector(\"td:nth-child(4)\").textContent;\n            var value2 = rowB.querySelector(\"td:nth-child(4)\").textContent;\n            return convertToNumber(value1) - convertToNumber(value2);\n        });\n        rows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    }\n}\nnavName.addEventListener(\"click\", function() {\n    return sortList(\"name\");\n});\nnavPosition.addEventListener(\"click\", function() {\n    return sortList(\"position\");\n});\nnavAge.addEventListener(\"click\", function() {\n    return sortList(\"age\");\n});\nnavSalary.addEventListener(\"click\", function() {\n    return sortList(\"salary\");\n});\n\n//# sourceMappingURL=index.d4e97d48.js.map\n","'use strict';\n\nconst thead = document.querySelector('thead');\nconst theadRow = thead.querySelector('tr');\nconst nav = theadRow.querySelectorAll('th');\n\nconst navName = nav[0];\nconst navPosition = nav[1];\nconst navAge = nav[2];\nconst navSalary = nav[3];\n\nconst tbody = document.querySelector('tbody');\nconst rows = [...tbody.querySelectorAll('tr')];\n\nfunction convertToNumber(str) {\n  const cleanStr = str\n    .split('')\n    .filter((ch) => (ch >= '0' && ch <= '9') || ch === '.')\n    .join('');\n\n  return parseFloat(cleanStr);\n}\n\nfunction sortList(element) {\n  if (element === 'name') {\n    rows.sort((rowA, rowB) => {\n      const value1 = rowA.querySelector(`td:nth-child(1)`).textContent;\n      const value2 = rowB.querySelector(`td:nth-child(1)`).textContent;\n\n      return value1.localeCompare(value2);\n    });\n\n    rows.forEach((row) => tbody.appendChild(row));\n  }\n\n  if (element === 'position') {\n    rows.sort((rowA, rowB) => {\n      const value1 = rowA.querySelector(`td:nth-child(2)`).textContent;\n      const value2 = rowB.querySelector(`td:nth-child(2)`).textContent;\n\n      return value1.localeCompare(value2);\n    });\n\n    rows.forEach((row) => tbody.appendChild(row));\n  }\n\n  if (element === 'age') {\n    rows.sort((rowA, rowB) => {\n      const value1 = rowA.querySelector(`td:nth-child(3)`).textContent;\n      const value2 = rowB.querySelector(`td:nth-child(3)`).textContent;\n\n      return convertToNumber(value1) - convertToNumber(value2);\n    });\n\n    rows.forEach((row) => tbody.appendChild(row));\n  }\n\n  if (element === 'salary') {\n    rows.sort((rowA, rowB) => {\n      const value1 = rowA.querySelector(`td:nth-child(4)`).textContent;\n      const value2 = rowB.querySelector(`td:nth-child(4)`).textContent;\n\n      return convertToNumber(value1) - convertToNumber(value2);\n    });\n\n    rows.forEach((row) => tbody.appendChild(row));\n  }\n}\n\nnavName.addEventListener('click', () => sortList('name'));\nnavPosition.addEventListener('click', () => sortList('position'));\nnavAge.addEventListener('click', () => sortList('age'));\nnavSalary.addEventListener('click', () => sortList('salary'));\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","nav","theadRow","thead","document","querySelector","querySelectorAll","navName","navPosition","navAge","navSalary","tbody","rows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","convertToNumber","str","parseFloat","split","filter","ch","join","sortList","element","sort","rowA","rowB","value1","textContent","value2","localeCompare","forEach","row","appendChild","addEventListener"],"version":3,"file":"index.d4e97d48.js.map"}